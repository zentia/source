// Copyright 2018 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

#include "vec.isph"

struct TransferFunction
{
  // Forward and inverse functions
  vec3f (*uniform forward)(const uniform TransferFunction* uniform self, vec3f y);
  vec3f (*uniform inverse)(const uniform TransferFunction* uniform self, vec3f x);

  // Input and output scales (*not* applied by the forward/inverse functions!)
  uniform const float* uniform inputScalePtr;
  uniform float inputScale;
  uniform float outputScale;

  // Normalization scale (HDR only)
  uniform float normScale;
  uniform float rcpNormScale;
};

inline uniform float TransferFunction_getInputScale(const uniform TransferFunction* uniform self)
{
  return self->inputScalePtr ? *self->inputScalePtr : self->inputScale;
}

inline uniform float TransferFunction_getOutputScale(const uniform TransferFunction* uniform self)
{
  if (self->inputScalePtr)
  {
    const uniform float inputScale = *self->inputScalePtr;
    return (inputScale != 0.f) ? (1.f / inputScale) : 0.f;
  }
  return self->outputScale;
}

// Computes the luminance of an RGB color
inline float luminance(vec3f c)
{
  return 0.212671f * c.x + 0.715160f * c.y + 0.072169f * c.z;
}