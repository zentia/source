digraph "detail::is_output_iterator&lt; It, T, enable_if_t&lt; std::is_assignable&lt; decltype(*std::declval&lt; decay_t&lt; It &gt; &amp; &gt;()++), T &gt;::value &gt; &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="detail::is_output_iterator\l\< It, T, enable_if_t\< std\l::is_assignable\< decltype\l(*std::declval\< decay_t\< It\l \> & \>()++), T \>::value \> \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge3_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="std::false_type",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [id="edge4_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="std::true_type",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
