digraph "tbb::internal::generic_scheduler::get_task"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tbb::internal::generic\l_scheduler::get_task",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Get a task from the local pool at specified location T."];
  Node1 -> Node2 [id="edge23_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tbb::internal::task\l_proxy::extract_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structtbb_1_1internal_1_1task__proxy.html#a40da3f9c1cf3a45264946dac05f7b9b6",tooltip="Returns a pointer to the encapsulated task or NULL, and frees proxy if necessary."];
  Node2 -> Node3 [id="edge24_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tbb::internal::as_atomic",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a958f482f9d5f3476ca70610af5336040",tooltip=" "];
  Node2 -> Node4 [id="edge25_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tbb::internal::task\l_proxy::is_shared",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structtbb_1_1internal_1_1task__proxy.html#a364254f54e3817ee490eab693b9ee916",tooltip="True if the proxy is stored both in its sender's pool and in the destination mailbox."];
  Node2 -> Node5 [id="edge26_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tbb::internal::task\l_proxy::task_ptr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structtbb_1_1internal_1_1task__proxy.html#a82adc9bcd803435a2edfc7b29e510e36",tooltip="Returns a pointer to the encapsulated task or NULL."];
  Node1 -> Node6 [id="edge27_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tbb::internal::generic\l_scheduler::free_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a12dd37171af77214add72a973e6b71ba",tooltip="Put task on free list."];
  Node6 -> Node7 [id="edge28_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tbb::internal::generic\l_scheduler::deallocate_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#ad965858a5e7cb5574926d8d1692063b5",tooltip="Return task object to the memory allocator."];
  Node7 -> Node8 [id="edge29_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tbb::internal::NFS_Free",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#abd3fdd42ea716867fc95116354481b4e",tooltip=" "];
  Node6 -> Node9 [id="edge30_Node000006_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tbb::internal::generic\l_scheduler::free_nonlocal\l_small_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a720c816c0253fe199e4583cd24090e9b",tooltip="Free a small task t that that was allocated by a different scheduler"];
  Node9 -> Node3 [id="edge31_Node000009_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node7 [id="edge32_Node000009_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node10 [id="edge33_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="tbb::internal::generic\l_scheduler::generic_scheduler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a838f6ccf79d7ee8a55843de2f8004759",tooltip=" "];
  Node10 -> Node11 [id="edge34_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="tbb::internal::generic\l_scheduler::allocate_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#aa0d316e9f3063c6b57fa21e0716d4d77",tooltip="Allocate task object, either from the heap or a free list."];
  Node11 -> Node12 [id="edge35_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="tbb::internal::NFS\l_Allocate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a395611542e21705f49de2a06e2c88f59",tooltip=" "];
  Node12 -> Node13 [id="edge36_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="is_aligned",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$harness_8h.html#a2cd6d606b7a354545b2cdecca67efa44",tooltip=" "];
  Node12 -> Node14 [id="edge37_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="tbb::internal::throw\l_exception",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a61a681f9fd15fdb055f7725d6416ddf4",tooltip="Versionless convenience wrapper for throw_exception_v4()"];
  Node14 -> Node15 [id="edge38_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="tbb::internal::throw\l_exception_v4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#adccc1f69ee5a85094eb6a5f9fbac89d7",tooltip="Gathers all throw operators in one place."];
  Node10 -> Node16 [id="edge39_Node000010_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="tbb::internal::governor\l::is_set",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a14d4453f34a770b1c983c2ed38570e31",tooltip="Used to check validity of the local scheduler TLS contents."];
  Node16 -> Node17 [id="edge40_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="tbb::internal::governor\l::tls_value_of",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a342eb43ff89d1b0da4cb9aa5417b3965",tooltip="Computes the value of the TLS"];
  Node9 -> Node18 [id="edge41_Node000009_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="tbb::internal::generic\l_scheduler::plugged_return_list",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a190c2087092b3e0f2a39b01c7cc27e93",tooltip="Special value used to mark my_return_list as not taking any more entries."];
  Node1 -> Node19 [id="edge42_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="tbb::internal::generic\l_scheduler::is_local_task\l_pool_quiescent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a74b022285a6ff04a9ea2957999d4def3",tooltip=" "];
  Node1 -> Node20 [id="edge43_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="tbb::internal::generic\l_scheduler::is_proxy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a868812dd8d875a225a6f589fdbaafe54",tooltip="True if t is a task_proxy"];
  Node1 -> Node21 [id="edge44_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="tbb::internal::generic\l_scheduler::is_version\l_3_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a33519b4cf710f8c46129672f79fb6ec4",tooltip=" "];
}
