digraph "Eigen::TensorSycl::internal::ExtractAccessor&lt; TensorEvaluator&lt; const TensorEvalToOp&lt; Expr &gt;, Dev &gt; &gt;::getTuple"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Eigen::TensorSycl::\linternal::ExtractAccessor\l\< TensorEvaluator\< const\l TensorEvalToOp\< Expr \>,\l Dev \> \>::getTuple",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge8_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="utility::tuple::append",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceutility_1_1tuple.html#a3d9d0e2cdff4564e5c2e37368259ccd6",tooltip="the deduction function for append_base that automatically generate the IndexRange"];
  Node2 -> Node3 [id="edge9_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="utility::tuple::append_base",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceutility_1_1tuple.html#a3ea3f51ccd84a9e293b32d2662605569",tooltip="unpacking the elements of the input tuple t and creating a new tuple by adding element a at the end o..."];
  Node3 -> Node4 [id="edge10_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$stdlist__overload_8cpp.html#a120a90058439faee14791b33f94c0693",tooltip=" "];
  Node3 -> Node5 [id="edge11_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="utility::tuple::make\l_tuple",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceutility_1_1tuple.html#a88ee8d0837a69d3d7ad44546aa2949cb",tooltip="Creates a tuple object, deducing the target type from the types of arguments."];
  Node1 -> Node6 [id="edge12_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="eval",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$sparse__permutations_8cpp.html#abf03ad46cd5db5b4eabad69a86a13a6c",tooltip=" "];
  Node1 -> Node7 [id="edge13_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Eigen::TensorSycl::\linternal::AccessorConstructor\l::getTuple",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_eigen_1_1_tensor_sycl_1_1internal_1_1_accessor_constructor.html#a7afcb4b214e2371f61cdeb81eda14e5a",tooltip=" "];
  Node7 -> Node6 [id="edge14_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
}
