digraph "magic_enum::detail::has_is_flags&lt; T, std::void_t&lt; decltype(customize::enum_range&lt; T &gt;::is_flags)&gt; &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="magic_enum::detail\l::has_is_flags\< T, std\l::void_t\< decltype(customize\l::enum_range\< T \>::is_flags)\> \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge3_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="std::false_type",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [id="edge4_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="std::bool_constant\l\< std::is_same_v\< bool,\l std::decay_t\< decltype\l(customize::enum_range\<\l T \>::is_flags)\> \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
