digraph "DekkerArbitrationBody&lt; T, aligned, E &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="DekkerArbitrationBody\l\< T, aligned, E \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge6_Node000001_Node000002",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="NoAssign",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_no_assign.html",tooltip="Base class for prohibiting compiler-generated operator="];
  Node3 -> Node1 [id="edge7_Node000001_Node000003",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Harness::NoAfterlife",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_harness_1_1_no_afterlife.html",tooltip="Base class that asserts that no operations are made with the object after its destruction."];
  Node4 -> Node1 [id="edge8_Node000001_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" my_rand",fontcolor="grey" ];
  Node4 [id="Node000004",label="Harness::FastRandom",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_harness_1_1_fast_random.html",tooltip=" "];
  Node5 -> Node1 [id="edge9_Node000001_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" s_ready_storage\ns_turn_storage",fontcolor="grey" ];
  Node5 [id="Node000005",label="AlignedAtomic\< Eigen\l::Triplet\< double \>,\l aligned \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_aligned_atomic.html",tooltip=" "];
  Node2 -> Node5 [id="edge10_Node000005_Node000002",dir="back",color="firebrick4",style="solid",tooltip=" "];
}
