digraph "tf::SmallVector&lt; T, N &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tf::SmallVector\< T, N \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="class to define a vector optimized for small array"];
  Node2 -> Node1 [id="edge10_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tf::SmallVectorImpl\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_impl.html",tooltip=" "];
  Node3 -> Node2 [id="edge11_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tf::SmallVectorTemplateBase\l\< T, IsPod\< T \>::value \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_template_base.html",tooltip=" "];
  Node4 -> Node3 [id="edge12_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tf::SmallVectorTemplateCommon\l\< T, typename \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_template_common.html",tooltip=" "];
  Node5 -> Node4 [id="edge13_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tf::SmallVectorBase",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_base.html",tooltip=" "];
  Node6 -> Node4 [id="edge14_Node000004_Node000006",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" FirstEl",fontcolor="grey" ];
  Node6 [id="Node000006",label="tf::SmallVectorTemplateCommon\l\< T, typename \>::AlignedUnionType\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structtf_1_1_small_vector_template_common_1_1_aligned_union_type.html",tooltip=" "];
  Node7 -> Node1 [id="edge15_Node000001_Node000007",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" Storage",fontcolor="grey" ];
  Node7 [id="Node000007",label="tf::SmallVectorStorage\l\< Eigen::Triplet\< double\l \>, 2 \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structtf_1_1_small_vector_storage.html",tooltip=" "];
  Node8 -> Node7 [id="edge16_Node000007_Node000008",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" InlineElts",fontcolor="grey" ];
  Node8 [id="Node000008",label="tf::SmallVectorTemplateCommon\l\< Eigen::Triplet\< double \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_template_common.html",tooltip=" "];
  Node5 -> Node8 [id="edge17_Node000008_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node8 [id="edge18_Node000008_Node000009",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" FirstEl",fontcolor="grey" ];
  Node9 [id="Node000009",label="tf::SmallVectorTemplateCommon\l\< T, typename \>::AlignedUnionType\l\< Eigen::Triplet\< double \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structtf_1_1_small_vector_template_common_1_1_aligned_union_type.html",tooltip=" "];
}
