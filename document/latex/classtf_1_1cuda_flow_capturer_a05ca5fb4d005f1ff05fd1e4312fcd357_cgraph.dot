digraph "tf::cudaFlowCapturer::for_each_index"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tf::cudaFlowCapturer\l::for_each_index",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="updates a capture task to a for-each-index kernel task"];
  Node1 -> Node2 [id="edge16_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tf::cuda_for_each_index",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a01ad7ce62fa6f42f2f2fbff3659b7884",tooltip="performs asynchronous parallel iterations over an index-based range of items"];
  Node2 -> Node3 [id="edge17_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tf::detail::cuda_for\l_each_index_kernel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf_1_1detail.html#aa5625b737f69747c9fe334fc91b9dcb2",tooltip=" "];
  Node3 -> Node4 [id="edge18_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tf::cuda_get_tile",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a5a41760b383016bd1cebadcfd7f05476",tooltip=" "];
  Node4 -> Node4 [id="edge19_Node000004_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node5 [id="edge20_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tf::cuda_strided_iterate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a24db9e13fd26535886a7efc723ec1477",tooltip=" "];
  Node5 -> Node6 [id="edge21_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tf::cuda_iterate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a55e1e8a489984141bc8e0785cd13f9bc",tooltip=" "];
  Node6 -> Node6 [id="edge22_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge23_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tf::cudaIterate::eval",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structtf_1_1cuda_iterate.html#a46b1c72193af5cdfc8697a57754af6f9",tooltip=" "];
  Node7 -> Node7 [id="edge24_Node000007_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node8 [id="edge25_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cxx11__tensor__map_8cpp.html#a7f507fea02198f6cb81c86640c7b1a4e",tooltip=" "];
  Node6 -> Node8 [id="edge26_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node5 [id="edge27_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node8 [id="edge28_Node000005_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node9 [id="edge29_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tf::distance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#af00f6babb0818202960cbbf0a83bd8e7",tooltip="calculates the number of iterations in the given index range"];
  Node1 -> Node10 [id="edge30_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="tf::cudaFlowCapturer::on",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_flow_capturer.html#ad0d937ae0d77239f148b66a77e35db41",tooltip="captures a sequential CUDA operations from the given callable"];
}
