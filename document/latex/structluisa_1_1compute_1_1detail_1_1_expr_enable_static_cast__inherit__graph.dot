digraph "luisa::compute::detail::ExprEnableStaticCast&lt; T &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="luisa::compute::detail\l::ExprEnableStaticCast\< T \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Enable static cast to type Dest"];
  Node1 -> Node2 [id="edge12_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="luisa::compute::Expr\l\< Accel \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_expr_3_01_accel_01_4.html",tooltip=" "];
  Node2 -> Node3 [id="edge13_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="luisa::compute::Var\l\< Accel \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node4 [id="edge14_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="luisa::compute::Expr\l\< BindlessArray \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_expr_3_01_bindless_array_01_4.html",tooltip="Class of Expr<BindlessArray>"];
  Node4 -> Node5 [id="edge15_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="luisa::compute::Var\l\< BindlessArray \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node6 [id="edge16_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="luisa::compute::Expr\l\< ByteBuffer \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_expr_3_01_byte_buffer_01_4.html",tooltip=" "];
  Node6 -> Node7 [id="edge17_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="luisa::compute::Var\l\< ByteBuffer \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_var_3_01_byte_buffer_01_4.html",tooltip=" "];
  Node1 -> Node8 [id="edge18_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="luisa::compute::Expr\l\< IndirectDispatchBuffer \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_expr_3_01_indirect_dispatch_buffer_01_4.html",tooltip=" "];
  Node8 -> Node9 [id="edge19_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="luisa::compute::Var\l\< IndirectDispatchBuffer \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node10 [id="edge20_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="luisa::compute::Expr\l\< Matrix\< N \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_expr_3_01_matrix_3_01_n_01_4_01_4.html",tooltip="Class of Expr<Matrix><N>>. Can be constructed from Matrix<N>"];
  Node1 -> Node11 [id="edge21_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="luisa::compute::Expr\l\< SOA\< Matrix\< N \> \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1_expr_3_01_s_o_a_3_01_matrix_3_01_n_01_4_01_4_01_4.html",tooltip=" "];
  Node1 -> Node12 [id="edge22_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="luisa::compute::detail\l::Ref\< Matrix\< N \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1compute_1_1detail_1_1_ref_3_01_matrix_3_01_n_01_4_01_4.html",tooltip="Ref<Matrix<N>>"];
}
