digraph "Eigen::internal::blas_traits&lt; CwiseBinaryOp&lt; scalar_product_op&lt; Scalar &gt;, const CwiseNullaryOp&lt; scalar_constant_op&lt; Scalar &gt;, Plain1 &gt;, const CwiseNullaryOp&lt; scalar_constant_op&lt; Scalar &gt;, Plain2 &gt; &gt; &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Eigen::internal::blas\l_traits\< CwiseBinaryOp\l\< scalar_product_op\< Scalar\l \>, const CwiseNullaryOp\<\l scalar_constant_op\< Scalar\l \>, Plain1 \>, const CwiseNullaryOp\l\< scalar_constant_op\< Scalar \>,\l Plain2 \> \> \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge2_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Eigen::internal::blas\l_traits\< CwiseNullaryOp\l\< scalar_constant_op\< Scalar\l \>, Plain1 \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$struct_eigen_1_1internal_1_1blas__traits.html",tooltip=" "];
}
