digraph "testXXH32"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="testXXH32",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge10_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="checkResult32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$sanity__test_8c.html#acf826b8772afc1f35ad5cf5c8b8df911",tooltip=" "];
  Node2 -> Node3 [id="edge11_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="abortSanityTest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$sanity__test_8c.html#a589757ee5d8335e8a3b9544e81832a2e",tooltip=" "];
  Node1 -> Node4 [id="edge12_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="void",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$mimalloc_8h.html#a9d6d8aef94ac19034a5f163606f84830",tooltip=" "];
  Node1 -> Node5 [id="edge13_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="XXH32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___x_x_h32__family.html#ga49360c30d0eef2cd4e20cabfe6ab1c55",tooltip="Calculates the 32-bit hash of input using xxHash32."];
  Node1 -> Node6 [id="edge14_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="XXH32_createState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___x_x_h32__family.html#gac75bedadcc94c3e0062968923c2f6edb",tooltip="Allocates an XXH32_state_t."];
  Node1 -> Node7 [id="edge15_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="XXH32_digest",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___x_x_h32__family.html#ga0fbc2f47c31a6af57f46163212f2e11b",tooltip="Returns the calculated hash value from an XXH32_state_t."];
  Node1 -> Node8 [id="edge16_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="XXH32_freeState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___x_x_h32__family.html#gaab2c0ec5dbb1b738d3f58aa3fc640243",tooltip="Frees an XXH32_state_t."];
  Node1 -> Node9 [id="edge17_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="XXH32_reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___x_x_h32__family.html#ga817d5e6ae49b78747e5af15e5cc88b2b",tooltip="Resets an XXH32_state_t to begin a new hash."];
  Node1 -> Node10 [id="edge18_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="XXH32_update",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group___x_x_h32__family.html#gaacc2e89656b7b7184279c2d621594afa",tooltip="Consumes a block of input to an XXH32_state_t."];
}
