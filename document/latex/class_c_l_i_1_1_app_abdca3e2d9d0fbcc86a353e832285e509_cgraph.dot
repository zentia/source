digraph "CLI::App::_parse_positional"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CLI::App::_parse_positional",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge78_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CLI::App::_count_remaining\l_positionals",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a49f6f4abcdb2e06cc061df9606389c0e",tooltip="Count the required remaining positional arguments"];
  Node2 -> Node3 [id="edge79_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CLI::Option::count",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a80fde04b01db5b894001fb9c0c86be88",tooltip="Count the total number of times an option was passed"];
  Node2 -> Node4 [id="edge80_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CLI::Option::get_items\l_expected_min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a65f68eaa288d2608560ae87f3c36f6fa",tooltip="The total min number of expected string values to be used"];
  Node2 -> Node5 [id="edge81_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CLI::Option::get_positional",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a0f23a3a1ed7c5a47585117a4c9f27120",tooltip="True if the argument can be given directly"];
  Node2 -> Node6 [id="edge82_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CLI::OptionBase::get\l_required",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option_base.html#a4a2814630a3bb90e590787ce42d328c0",tooltip="True if this is a required option"];
  Node1 -> Node7 [id="edge83_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CLI::App::_find_subcommand",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#aeda475fb3f6725f7fde889fd4c77c942",tooltip=" "];
  Node1 -> Node8 [id="edge84_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CLI::App::_get_fallthrough\l_parent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a0d635d51216b7f710da587a708653299",tooltip="Get the appropriate parent to fallthrough to which is the first one that has a name or the main app"];
  Node8 -> Node9 [id="edge85_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CLI::App::App",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a8f5ebc36dcdff351cce50e3d3b89974f",tooltip="Special private constructor for subcommand"];
  Node9 -> Node9 [id="edge86_Node000009_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node10 [id="edge87_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CLI::App::set_help\l_all_flag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#af73694f6a3cc42e29e7274b77fdb5720",tooltip="Set a help all flag, replaced the existing one if present"];
  Node10 -> Node11 [id="edge88_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CLI::App::add_flag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a5fef22317a182fa5db1d7b1af4c89c68",tooltip="Add a flag with no description or variable assignment"];
  Node11 -> Node12 [id="edge89_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CLI::App::_add_flag\l_internal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#ac09345525410ce482948265f16f72cdf",tooltip="Internal function for adding a flag"];
  Node12 -> Node13 [id="edge90_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CLI::App::add_option",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#adb68306d25a26400399d11efe7211dc4",tooltip=" "];
  Node13 -> Node14 [id="edge91_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="std::begin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#aec76fc52a775d29bc4058c8e1405045a",tooltip=" "];
  Node13 -> Node15 [id="edge92_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="std::end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a35f71a4c49ddf38bb590177e3a4b2598",tooltip=" "];
  Node13 -> Node16 [id="edge93_Node000013_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CLI::App::get_option\l_no_throw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a029d50d6fdfde25e7f3e94ef2e525ccc",tooltip="Get an option by name (noexcept non-const version)"];
  Node16 -> Node17 [id="edge94_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CLI::Option::check_name",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_c_l_i_1_1_option.html#a1f9eda27ddb1b2d520e29724d550f6a0",tooltip="Check a name. Requires \"-\" or \"--\" for short / long, supports positional name"];
  Node17 -> Node18 [id="edge95_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CLI::Option::check\l_lname",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a6e970efc39aa4984b9bb797d071ce34a",tooltip="Requires \"--\" to be removed from string"];
  Node18 -> Node19 [id="edge96_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CLI::detail::find_member",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespace_c_l_i_1_1detail.html#ac94be0722dce2c7ff522ebc3fb80e33d",tooltip="Check if a string is a member of a list of strings and optionally ignore case or ignore underscores"];
  Node19 -> Node14 [id="edge97_Node000019_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node15 [id="edge98_Node000019_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node24 [id="edge99_Node000017_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CLI::Option::check\l_sname",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a46e7395f6a8a720e4305aea2edb4aa7b",tooltip="Requires \"-\" to be removed from string"];
  Node24 -> Node19 [id="edge100_Node000024_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node25 [id="edge101_Node000013_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CLI::Option::matching_name",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a67b1e51f9f873b265dac8122746fc2d7",tooltip="If options share any of the same names, find it"];
  Node25 -> Node18 [id="edge102_Node000025_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node24 [id="edge103_Node000025_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node26 [id="edge104_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CLI::Option::Option",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a577e99d3ea33598b4dc3605f544d14fc",tooltip="Making an option by hand is not defined, it must be made by the App class"];
  Node26 -> Node27 [id="edge105_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="callback",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$external_2spine-runtimes_2spine-sfml_2c_2example_2main_8cpp.html#a2f27b7fc84a39cace84d90f62a8d4c8e",tooltip=" "];
  Node26 -> Node59 [id="edge106_Node000026_Node000059",color="steelblue1",style="solid",tooltip=" "];
  Node59 [id="Node000059",label="CLI::detail::get_names",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespace_c_l_i_1_1detail.html#a6c9c870c5f7cd261e7363cb862634a3a",tooltip="Get a vector of short names, one of long names, and a single name"];
  Node26 -> Node70 [id="edge107_Node000026_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node70 [id="Node000070",label="CLI::detail::split\l_names",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ac8a8403ca4cfb40e30979111083c0c1c",tooltip=" "];
  Node70 -> Node71 [id="edge108_Node000070_Node000071",color="steelblue1",style="solid",tooltip=" "];
  Node71 [id="Node000071",label="CLI::detail::trim_copy",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespace_c_l_i_1_1detail.html#a5c7b00a328b3b2da564794081646c251",tooltip="Make a copy of the string and then trim it"];
  Node12 -> Node75 [id="edge109_Node000012_Node000075",color="steelblue1",style="solid",tooltip=" "];
  Node75 [id="Node000075",label="CLI::Option::expected",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a0b7cf6e62c1800a53ad314772eef6ed1",tooltip="Set the number of expected arguments"];
  Node75 -> Node26 [id="edge110_Node000075_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node76 [id="edge111_Node000012_Node000076",color="steelblue1",style="solid",tooltip=" "];
  Node76 [id="Node000076",label="CLI::detail::get_default\l_flag_values",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a01343c353c26ada5379fb84cbd3b01c8",tooltip="extract default flag values either {def} or starting with a !"];
  Node76 -> Node70 [id="edge112_Node000076_Node000070",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node77 [id="edge113_Node000012_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="CLI::Option::get_name",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a47e135d5198fd9df5b481091d2538b60",tooltip="Gets a comma separated list of names. Will include / prefer the positional name if positional is true..."];
  Node77 -> Node78 [id="edge114_Node000077_Node000078",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="CLI::Option::check\l_fname",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a331870cf4db8893cac3af126aac487a8",tooltip="Requires \"--\" to be removed from string"];
  Node78 -> Node19 [id="edge115_Node000078_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node79 [id="edge116_Node000077_Node000079",color="steelblue1",style="solid",tooltip=" "];
  Node79 [id="Node000079",label="CLI::Option::empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#ab9d324306095b7af93bc09812f5b4dec",tooltip="True if the option was not passed"];
  Node77 -> Node80 [id="edge117_Node000077_Node000080",color="steelblue1",style="solid",tooltip=" "];
  Node80 [id="Node000080",label="CLI::Option::get_flag\l_value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#aa006173c1a09b0ed01bff4b305b042ca",tooltip=" "];
  Node80 -> Node19 [id="edge118_Node000080_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node81 [id="edge119_Node000080_Node000081",color="steelblue1",style="solid",tooltip=" "];
  Node81 [id="Node000081",label="CLI::ArgumentMismatch\l::FlagOverride",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$class_c_l_i_1_1_argument_mismatch.html#af40fccb119664c7c5025bba76fb2d7e2",tooltip=" "];
  Node80 -> Node85 [id="edge120_Node000080_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node85 [id="Node000085",label="second",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$second___n_o_n_e_8f.html#ae9f971a8b343bd2fcb85c3b16da97f10",tooltip="SECOND returns nothing"];
  Node85 -> Node85 [id="edge121_Node000085_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node86 [id="edge122_Node000077_Node000086",color="steelblue1",style="solid",tooltip=" "];
  Node86 [id="Node000086",label="CLI::OptionBase\< Option\l \>::get_group",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option_base.html#aeb86193da05c10a12814ce45d2d16e0d",tooltip=" "];
  Node77 -> Node87 [id="edge123_Node000077_Node000087",color="steelblue1",style="solid",tooltip=" "];
  Node87 [id="Node000087",label="CLI::Option::get_items\l_expected",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#aa12c4f65cf2ac9c58ebe050c46603fc0",tooltip="The total min number of expected string values to be used"];
  Node87 -> Node4 [id="edge124_Node000087_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node77 -> Node88 [id="edge125_Node000077_Node000088",color="steelblue1",style="solid",tooltip=" "];
  Node88 [id="Node000088",label="CLI::detail::join",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ab351f13ec104e2cba19ec6baf4a552f6",tooltip="Simple function to join a string"];
  Node88 -> Node14 [id="edge126_Node000088_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node88 -> Node15 [id="edge127_Node000088_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node5 [id="edge128_Node000012_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node89 [id="edge129_Node000012_Node000089",color="steelblue1",style="solid",tooltip=" "];
  Node89 [id="Node000089",label="CLI::detail::has_default\l_flag_values",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ae89da9fa11d234a8bf504d6ec85133cc",tooltip="check if the flag definitions has possible false flags"];
  Node12 -> Node90 [id="edge130_Node000012_Node000090",color="steelblue1",style="solid",tooltip=" "];
  Node90 [id="Node000090",label="CLI::Option::multi\l_option_policy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a849a0cf07784e81b514761722a0d9efc",tooltip="Take the last argument if given multiple times (or another policy)"];
  Node90 -> Node26 [id="edge131_Node000090_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node91 [id="edge132_Node000012_Node000091",color="steelblue1",style="solid",tooltip=" "];
  Node91 [id="Node000091",label="CLI::IncorrectConstruction\l::PositionalFlag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_incorrect_construction.html#a90eef424efd6e5b6cb8874ba2e53ce08",tooltip=" "];
  Node91 -> Node91 [id="edge133_Node000091_Node000091",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node92 [id="edge134_Node000012_Node000092",color="steelblue1",style="solid",tooltip=" "];
  Node92 [id="Node000092",label="CLI::detail::remove\l_default_flag_values",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a35553311017b07811ce81db2f560cb3d",tooltip=" "];
  Node12 -> Node93 [id="edge135_Node000012_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="CLI::App::remove_option",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a8e09991d2a23ae48aff139c8eda5f6c7",tooltip="Removes an option from the App. Takes an option pointer. Returns true if found and removed."];
  Node93 -> Node14 [id="edge136_Node000093_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node93 -> Node15 [id="edge137_Node000093_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node94 [id="edge138_Node000012_Node000094",color="steelblue1",style="solid",tooltip=" "];
  Node94 [id="Node000094",label="CLI::OptionBase::required",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option_base.html#af18d4c8d8c2392b6947db9179110289a",tooltip="Set the option as required"];
  Node10 -> Node93 [id="edge139_Node000010_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node9 -> Node95 [id="edge140_Node000009_Node000095",color="steelblue1",style="solid",tooltip=" "];
  Node95 [id="Node000095",label="CLI::App::set_help_flag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a0d5c8de603f1911aee549b649c68e083",tooltip="Set a help flag, replace the existing one if present"];
  Node95 -> Node11 [id="edge141_Node000095_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node95 -> Node93 [id="edge142_Node000095_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node96 [id="edge143_Node000001_Node000096",color="steelblue1",style="solid",tooltip=" "];
  Node96 [id="Node000096",label="CLI::App::_move_to\l_missing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_app.html#a1ec19459db888b5986da3821ef8ebfb2",tooltip="Helper function to place extra values in the most appropriate position"];
  Node1 -> Node1 [id="edge144_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node97 [id="edge145_Node000001_Node000097",color="steelblue1",style="solid",tooltip=" "];
  Node97 [id="Node000097",label="CLI::Option::_validate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#afd4ba41c3478ceb636fdfc4dfdfcb2b3",tooltip=" "];
  Node1 -> Node3 [id="edge146_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node98 [id="edge147_Node000001_Node000098",color="steelblue1",style="solid",tooltip=" "];
  Node98 [id="Node000098",label="CLI::Option::get_allow\l_extra_args",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#acf81df108f7fa668b63f5f36edf6a647",tooltip="Get the current value of allow extra args"];
  Node1 -> Node99 [id="edge148_Node000001_Node000099",color="steelblue1",style="solid",tooltip=" "];
  Node99 [id="Node000099",label="CLI::Option::get_items\l_expected_max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a7bdc3555509b93cbd8d5b9b2ccb3b016",tooltip="Get the maximum number of items expected to be returned and used for the callback"];
  Node99 -> Node100 [id="edge149_Node000099_Node000100",color="steelblue1",style="solid",tooltip=" "];
  Node100 [id="Node000100",label="CLI::detail::checked\l_multiply",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a58ce723daebf6cd298565eb365d1b157",tooltip="Performs a *= b; if it doesn't cause integer overflow. Returns false otherwise."];
  Node100 -> Node100 [id="edge150_Node000100_Node000100",color="steelblue1",style="solid",tooltip=" "];
  Node100 -> Node101 [id="edge151_Node000100_Node000101",color="steelblue1",style="solid",tooltip=" "];
  Node101 [id="Node000101",label="CLI::detail::overflowCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a569135c6e266940a5f914698b9deef66",tooltip="Do a check for overflow on signed numbers"];
  Node101 -> Node101 [id="edge152_Node000101_Node000101",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node4 [id="edge153_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge154_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
}
