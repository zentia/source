digraph "ff::ff_DC::DACFunction"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ff::ff_DC::DACFunction",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="DACFunction it represents the generic (recursive) task of a Divide and Conquer algorithm...."];
  Node1 -> Node2 [id="edge3_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ff::ff_DC::CombineFunction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c.html#a0dcc8da3c6c014c70a9f6ace7c4c22d3",tooltip="CombineFunction it represents the task for the Combine part of a Divide and Conquer algorithm"];
  Node1 -> Node1 [id="edge4_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
}
