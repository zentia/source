digraph "rfl::parsing::NamedTupleParser::read_object_or_array"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="rfl::parsing::NamedTuple\lParser::read_object_or_array",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge11_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="rfl::parsing::NamedTuple\lParser::handle_missing\l_fields",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structrfl_1_1parsing_1_1_named_tuple_parser.html#a51f81fde6aa83f1cb9ce3bdf203fd18e",tooltip="Generates error messages for when fields are missing."];
  Node2 -> Node3 [id="edge12_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="rfl::parsing::NamedTuple\lParser::handle_one_missing_field",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structrfl_1_1parsing_1_1_named_tuple_parser.html#ac42f6750475293a8069087de9c1ac4d4",tooltip="Generates error messages for when fields are missing."];
  Node3 -> Node4 [id="edge13_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="rfl::get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacerfl.html#ac379420409251e5a3c0bea4a701daf0a",tooltip="Gets a field by index."];
  Node4 -> Node4 [id="edge14_Node000004_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node5 [id="edge15_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="std::get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#aae41d8280b7ccc3f0e0a0be2dab21c8f",tooltip="Gets an element by index."];
  Node5 -> Node5 [id="edge16_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node6 [id="edge17_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="rfl::parsing::is_required",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacerfl_1_1parsing.html#a5c8de53ef6bbaf95b5ebb0a9ce938d83",tooltip=" "];
  Node6 -> Node6 [id="edge18_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node7 [id="edge19_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="rfl::parsing::to_single\l_error_message",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacerfl_1_1parsing.html#a3407c71c31e03f4779d002aebcad6acf",tooltip="Combines a set of errors to a single, readable error message."];
  Node7 -> Node8 [id="edge20_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="rfl::internal::strings\l::replace_all",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacerfl_1_1internal_1_1strings.html#aba6e6b858dd073162204fe7f98b56760",tooltip="Replace all occurences of _from with _to."];
}
