digraph "tbb::internal::concurrent_vector_base_v3::helper::acquire_segment"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tbb::internal::concurrent\l_vector_base_v3::helper\l::acquire_segment",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge16_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tbb::internal::concurrent\l_vector_base_v3::helper\l::enable_segment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1concurrent__vector__base__v3_1_1helper.html#aaa6b8fda2720bafd919c7df8d5568a21",tooltip=" "];
  Node2 -> Node3 [id="edge17_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tbb::internal::concurrent\l_vector_base_v3::helper\l::allocate_segment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1concurrent__vector__base__v3_1_1helper.html#a583881f9cbffeb041b97545a83cda55c",tooltip=" "];
  Node3 -> Node4 [id="edge18_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tbb::internal::throw\l_exception",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a61a681f9fd15fdb055f7725d6416ddf4",tooltip="Versionless convenience wrapper for throw_exception_v4()"];
  Node4 -> Node5 [id="edge19_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tbb::internal::throw\l_exception_v4",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#adccc1f69ee5a85094eb6a5f9fbac89d7",tooltip="Gathers all throw operators in one place."];
  Node2 -> Node6 [id="edge20_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tbb::internal::concurrent\l_vector_base_v3::helper\l::assign_first_segment_if\l_necessary",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1concurrent__vector__base__v3_1_1helper.html#a7c21850aac02edc06d2a84b3c261c1ea",tooltip="assign first segment size. k - is index of last segment to be allocated, not a count of segments"];
  Node2 -> Node7 [id="edge21_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tbb::load",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb.html#a23d6adc1a2bbbb77b4d9f52fab1e5b0f",tooltip="Specialization for atomic<T*> with arithmetic and operator->."];
  Node7 -> Node7 [id="edge22_Node000007_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node8 [id="edge23_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tbb::internal::concurrent\l_vector_base_v3::helper\l::publish_segment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1concurrent__vector__base__v3_1_1helper.html#aa6a138a09384f9cc92fda2966dbf4c43",tooltip="Publish segment so other threads can see it."];
  Node8 -> Node9 [id="edge24_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="rhs",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$poisson_8cpp.html#a38c677f5cc4e47bc7505aef707c1bb83",tooltip=" "];
  Node9 -> Node10 [id="edge25_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cxx11__tensor__map_8cpp.html#a7f507fea02198f6cb81c86640c7b1a4e",tooltip=" "];
  Node9 -> Node11 [id="edge26_Node000009_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="u_exact",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$poisson_8cpp.html#a06fc16c4676f839f8de736a6791b6862",tooltip=" "];
  Node11 -> Node12 [id="edge27_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="sin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_array_cwise_unary_ops_8h.html#a9cfb0ea58bd813510a9e2db18a5e49f0",tooltip=" "];
  Node9 -> Node13 [id="edge28_Node000009_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="uxxyy_exact",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$poisson_8cpp.html#a557a61cf12d143424a35123b14048a22",tooltip=" "];
  Node13 -> Node12 [id="edge29_Node000013_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node14 [id="edge30_Node000002_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="segment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_block_methods_8h.html#a3c8d2bfe6f857a2a270b78759487e3a8",tooltip="This is the const version of segment(Index,Index)."];
}
