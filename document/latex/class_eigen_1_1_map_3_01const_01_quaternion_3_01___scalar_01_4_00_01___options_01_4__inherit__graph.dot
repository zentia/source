digraph "Eigen::Map&lt; const Quaternion&lt; _Scalar &gt;, _Options &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Eigen::Map\< const Quaternion\l\< _Scalar \>, _Options \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Quaternion expression mapping a constant memory buffer"];
  Node2 -> Node1 [id="edge4_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Eigen::MapBase\< Derived,\l Level \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_map_base.html",tooltip=" "];
  Node3 -> Node1 [id="edge5_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Eigen::QuaternionBase\l\< Map\< const Quaternion\l\< _Scalar \>, _Options \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_quaternion_base.html",tooltip=" "];
  Node4 -> Node3 [id="edge6_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Eigen::RotationBase\l\< Derived, _Dim \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_rotation_base.html",tooltip="Common base class for compact rotation representations"];
}
