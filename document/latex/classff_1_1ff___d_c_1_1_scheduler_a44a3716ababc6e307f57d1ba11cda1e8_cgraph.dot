digraph "ff::ff_DC::Scheduler::svc"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="ff::ff_DC::Scheduler::svc",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge15_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ff::ff_DC::Scheduler\l::AddTaskScheduler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c_1_1_scheduler.html#a367de455174663729997378be82248d7",tooltip=" "];
  Node2 -> Node3 [id="edge16_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ff::ff_DC::Scheduler\l::insertTask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c_1_1_scheduler.html#afb2dfbda97fc93f1bd0452e387f4509a",tooltip=" "];
  Node3 -> Node4 [id="edge17_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="ff::TaskFScheduler\l\< generic_task_t, compare\l_t \>::createTask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1_task_f_scheduler.html#a8f5ea462adcfc321a537254c2c93d4ce",tooltip=" "];
  Node3 -> Node5 [id="edge18_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="icl_hash_delete",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$icl__hash_8h.html#a30a982886c3aa1a4d7559a20676b5df3",tooltip=" "];
  Node3 -> Node6 [id="edge19_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="icl_hash_find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$icl__hash_8h.html#aea3615a1d4abe87a4f11eda7a86be73d",tooltip=" "];
  Node3 -> Node7 [id="edge20_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="icl_hash_insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$icl__hash_8h.html#a1f5d73281a0159f006c1c667e6a638e2",tooltip=" "];
  Node2 -> Node8 [id="edge21_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="ff::ff_DC::Scheduler\l::schedule_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c_1_1_scheduler.html#a7da99b7834f19af728ea1c86e5161b3b",tooltip=" "];
  Node1 -> Node9 [id="edge22_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="ff::ff_DC::CombineFunction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c.html#a0dcc8da3c6c014c70a9f6ace7c4c22d3",tooltip="CombineFunction it represents the task for the Combine part of a Divide and Conquer algorithm"];
  Node1 -> Node10 [id="edge23_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="ff::ff_DC::DACFunction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c.html#a0bdf09998d68a4c78013f48079a2f470",tooltip="DACFunction it represents the generic (recursive) task of a Divide and Conquer algorithm...."];
  Node10 -> Node9 [id="edge24_Node000010_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node10 [id="edge25_Node000010_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge26_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="ff::ff_DC::Scheduler\l::handleCompletedTask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classff_1_1ff___d_c_1_1_scheduler.html#acfe8e8cd93455d44333d7067bdf25b35",tooltip=" "];
  Node1 -> Node3 [id="edge27_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge28_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
}
