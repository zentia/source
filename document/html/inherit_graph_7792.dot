digraph "类继承关系图"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="std::runtime_error",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node0 -> Node1 [id="edge6590_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="CLI::Error",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_error.html",tooltip="All errors derive from this one"];
  Node1 -> Node2 [id="edge6591_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CLI::ConstructionError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_construction_error.html",tooltip="Construction errors (not in parsing)"];
  Node2 -> Node3 [id="edge6592_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CLI::BadNameString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_bad_name_string.html",tooltip="Thrown on construction of a bad name"];
  Node2 -> Node4 [id="edge6593_Node000002_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CLI::IncorrectConstruction",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_incorrect_construction.html",tooltip="Thrown when an option is set to conflicting values (non-vector and multi args, for example)"];
  Node2 -> Node5 [id="edge6594_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CLI::OptionAlreadyAdded",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option_already_added.html",tooltip="Thrown when an option already exists"];
  Node1 -> Node6 [id="edge6595_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CLI::OptionNotFound",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option_not_found.html",tooltip="Thrown when counting a nonexistent option"];
  Node1 -> Node7 [id="edge6596_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CLI::ParseError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_parse_error.html",tooltip="Anything that can error in Parse"];
  Node7 -> Node8 [id="edge6597_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CLI::ArgumentMismatch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_argument_mismatch.html",tooltip="Thrown when the wrong number of arguments has been received"];
  Node7 -> Node9 [id="edge6598_Node000007_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CLI::ConfigError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_config_error.html",tooltip="Thrown when extra values are found in an INI file"];
  Node7 -> Node10 [id="edge6599_Node000007_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CLI::ConversionError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_conversion_error.html",tooltip="Thrown when conversion call back fails, such as when an int fails to coerce to a string"];
  Node7 -> Node11 [id="edge6600_Node000007_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="CLI::ExcludesError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_excludes_error.html",tooltip="Thrown when an excludes option is present"];
  Node7 -> Node12 [id="edge6601_Node000007_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CLI::ExtrasError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_extras_error.html",tooltip="Thrown when too many positionals or options are found"];
  Node7 -> Node13 [id="edge6602_Node000007_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CLI::FileError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_file_error.html",tooltip="Thrown when parsing an INI file and it is missing"];
  Node7 -> Node14 [id="edge6603_Node000007_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CLI::HorribleError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_horrible_error.html",tooltip=" "];
  Node7 -> Node15 [id="edge6604_Node000007_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CLI::InvalidError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_invalid_error.html",tooltip="Thrown when validation fails before parsing"];
  Node7 -> Node16 [id="edge6605_Node000007_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CLI::RequiredError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_required_error.html",tooltip="Thrown when a required option is missing"];
  Node7 -> Node17 [id="edge6606_Node000007_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CLI::RequiresError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_requires_error.html",tooltip="Thrown when a requires option is missing"];
  Node7 -> Node18 [id="edge6607_Node000007_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="CLI::RuntimeError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_runtime_error.html",tooltip="Does not output a diagnostic in CLI11_PARSE, but allows main() to return with a specific error code."];
  Node7 -> Node19 [id="edge6608_Node000007_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="CLI::Success",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_success.html",tooltip="This is a successful completion on parsing, supposed to exit"];
  Node19 -> Node20 [id="edge6609_Node000019_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CLI::CallForAllHelp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_call_for_all_help.html",tooltip="Usually something like –help-all on command line"];
  Node19 -> Node21 [id="edge6610_Node000019_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CLI::CallForHelp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_call_for_help.html",tooltip="-h or –help on command line"];
  Node19 -> Node22 [id="edge6611_Node000019_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CLI::CallForVersion",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_call_for_version.html",tooltip="-v or –version on command line"];
  Node7 -> Node23 [id="edge6612_Node000007_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CLI::ValidationError",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_validation_error.html",tooltip="Thrown when validation of results fails"];
  Node0 -> Node24 [id="edge6613_Node000000_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="FF_Exception",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_f_f___exception.html",tooltip=" "];
  Node0 -> Node25 [id="edge6614_Node000000_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="cds::gc::dhp::not_initialized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcds_1_1gc_1_1dhp_1_1not__initialized.html",tooltip="Exception \"Dynamic Hazard Pointer SMR is not initialized\""];
  Node0 -> Node26 [id="edge6615_Node000000_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="cds::gc::hp::details\l::not_initialized",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classcds_1_1gc_1_1hp_1_1details_1_1not__initialized.html",tooltip="Exception \"Hazard Pointer SMR is not initialized\""];
}
