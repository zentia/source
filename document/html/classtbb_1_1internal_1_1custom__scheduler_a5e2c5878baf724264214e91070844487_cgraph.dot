digraph "tbb::internal::custom_scheduler::local_wait_for_all"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tbb::internal::custom\l_scheduler::local_wait\l_for_all",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Scheduler loop that dispatches tasks."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tbb::internal::generic\l_scheduler::assert_task\l_pool_valid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#adc904ecbeb053f061c66edd8e85ac704",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tbb::internal::Concurrent\lWaitsEnabled",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a87ff64e432be3c5ddee9ddca98f7d0d5",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tbb::internal::generic\l_scheduler::free_nonlocal\l_small_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a720c816c0253fe199e4583cd24090e9b",tooltip="Free a small task t that that was allocated by a different scheduler"];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tbb::internal::as_atomic",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a958f482f9d5f3476ca70610af5336040",tooltip=" "];
  Node4 -> Node6 [id="edge5_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tbb::internal::generic\l_scheduler::deallocate_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#ad965858a5e7cb5574926d8d1692063b5",tooltip="Return task object to the memory allocator."];
  Node6 -> Node7 [id="edge6_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tbb::internal::NFS_Free",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#abd3fdd42ea716867fc95116354481b4e",tooltip=" "];
  Node4 -> Node8 [id="edge7_Node000004_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tbb::internal::generic\l_scheduler::generic_scheduler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a838f6ccf79d7ee8a55843de2f8004759",tooltip=" "];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tbb::internal::generic\l_scheduler::allocate_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#aa0d316e9f3063c6b57fa21e0716d4d77",tooltip="Allocate task object, either from the heap or a free list."];
  Node9 -> Node10 [id="edge9_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="tbb::internal::NFS\l_Allocate",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$namespacetbb_1_1internal.html#a395611542e21705f49de2a06e2c88f59",tooltip=" "];
  Node8 -> Node14 [id="edge10_Node000008_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="tbb::internal::governor\l::is_set",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a14d4453f34a770b1c983c2ed38570e31",tooltip="Used to check validity of the local scheduler TLS contents."];
  Node14 -> Node15 [id="edge11_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="tbb::internal::governor\l::tls_value_of",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a342eb43ff89d1b0da4cb9aa5417b3965",tooltip="Computes the value of the TLS"];
  Node4 -> Node16 [id="edge12_Node000004_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="tbb::internal::generic\l_scheduler::plugged_return_list",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a190c2087092b3e0f2a39b01c7cc27e93",tooltip="Special value used to mark my_return_list as not taking any more entries."];
  Node1 -> Node17 [id="edge13_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="tbb::internal::generic\l_scheduler::get_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a10c72a4aad7308d944cef26502ece55e",tooltip="Get a task from the local pool."];
  Node17 -> Node18 [id="edge14_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="tbb::internal::generic\l_scheduler::acquire_task_pool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#ae1cf7dda46c2687a1ea7edacbea10da1",tooltip="Locks the local task pool"];
  Node18 -> Node5 [id="edge15_Node000018_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node19 [id="edge16_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="tbb::internal::generic\l_scheduler::is_task_pool\l_published",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a1f221aa79878e3962ea2b3eaa7429fe1",tooltip=" "];
  Node17 -> Node20 [id="edge17_Node000017_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="tbb::internal::assert\l_task_valid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a35e1c039fac0fa1b7d8b4f491d557a86",tooltip=" "];
  Node17 -> Node17 [id="edge18_Node000017_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node21 [id="edge19_Node000017_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="tbb::internal::generic\l_scheduler::is_quiescent\l_local_task_pool_reset",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a089d1ca7efe019834cc06e82b4f3d883",tooltip=" "];
  Node21 -> Node22 [id="edge20_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="tbb::internal::generic\l_scheduler::is_local_task\l_pool_quiescent",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a74b022285a6ff04a9ea2957999d4def3",tooltip=" "];
  Node17 -> Node19 [id="edge21_Node000017_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node23 [id="edge22_Node000017_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="tbb::internal::generic\l_scheduler::publish_task_pool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#af222cccbf09e91c9c9caaad81f8d993d",tooltip="Used by workers to enter the task pool"];
  Node17 -> Node24 [id="edge23_Node000017_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="tbb::internal::generic\l_scheduler::release_task_pool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a6ff28eab04933075791b16075ceb5950",tooltip="Unlocks the local task pool"];
  Node24 -> Node19 [id="edge24_Node000024_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node25 [id="edge25_Node000017_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="tbb::internal::generic\l_scheduler::reset_task\l_pool_and_leave",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#ad8f6a6793961db84240434fffd7b50f3",tooltip="Resets head and tail indices to 0, and leaves task pool"];
  Node25 -> Node26 [id="edge26_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="tbb::internal::generic\l_scheduler::leave_task_pool",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#aad4a3aef975ca2516a81640654a65717",tooltip="Leave the task pool"];
  Node26 -> Node19 [id="edge27_Node000026_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node21 [id="edge28_Node000001_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge29_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node19 [id="edge30_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node28 [id="edge31_Node000001_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="tbb::internal::generic\l_scheduler::is_worker",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a24ecab941cdf8ff762126f1c65e5274a",tooltip="True if running on a worker thread, false otherwise."];
  Node1 -> Node29 [id="edge32_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="tbb::internal::generic\l_scheduler::master_outermost_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a744eb36f568cf2c726a0920494e5579d",tooltip="True if the scheduler is on the outermost dispatch level in a master thread."];
  Node29 -> Node28 [id="edge33_Node000029_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node30 [id="edge34_Node000029_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="tbb::internal::generic\l_scheduler::outermost_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#ab09f5bf82f328f50d815d38f8d553f5f",tooltip="True if the scheduler is on the outermost dispatch level."];
  Node1 -> Node30 [id="edge35_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node31 [id="edge36_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="tbb::internal::custom\l_scheduler::process_bypass_loop",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1custom__scheduler.html#a4ac27cfa293899be6721f939dfdcdf5b",tooltip="Implements the bypass loop of the dispatch loop (local_wait_for_all)."];
  Node31 -> Node2 [id="edge37_Node000031_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node20 [id="edge38_Node000031_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node32 [id="edge39_Node000031_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="tbb::internal::generic\l_scheduler::free_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a12dd37171af77214add72a973e6b71ba",tooltip="Put task on free list."];
  Node32 -> Node6 [id="edge40_Node000032_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node32 -> Node4 [id="edge41_Node000032_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node33 [id="edge42_Node000031_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="tbb::internal::generic\l_scheduler::is_proxy",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a868812dd8d875a225a6f589fdbaafe54",tooltip="True if t is a task_proxy"];
  Node31 -> Node19 [id="edge43_Node000031_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node34 [id="edge44_Node000031_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="tbb::internal::generic\l_scheduler::local_spawn",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#ae43166ffd9d7fb624158872394832f17",tooltip=" "];
  Node34 -> Node2 [id="edge45_Node000034_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node35 [id="edge46_Node000034_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="tbb::internal::generic\l_scheduler::commit_spawned_tasks",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a7f7d3a75d44d62525c8b31c32917d242",tooltip="Makes newly spawned tasks visible to thieves"];
  Node34 -> Node36 [id="edge47_Node000034_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="tbb::internal::fast\l_reverse_vector::copy\l_memory",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1fast__reverse__vector.html#ac812b1f549c217466d6d92f0033f3aee",tooltip="Copies the contents of the vector into the dst array."];
  Node34 -> Node37 [id="edge48_Node000034_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="tbb::internal::first",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#ab9f93f2f0b5a50bfec5f8ebbfbe9b9db",tooltip=" "];
  Node34 -> Node14 [id="edge49_Node000034_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node19 [id="edge50_Node000034_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node38 [id="edge51_Node000034_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="tbb::internal::generic\l_scheduler::prepare_for\l_spawning",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a8a62642cb4b1ba391b8d3b9a00dca541",tooltip="Checks if t is affinitized to another thread, and if so, bundles it as proxy."];
  Node38 -> Node9 [id="edge52_Node000038_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node32 [id="edge53_Node000038_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node38 -> Node39 [id="edge54_Node000038_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="tbb::internal::generic\l_scheduler::is_version\l_3_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a33519b4cf710f8c46129672f79fb6ec4",tooltip=" "];
  Node34 -> Node41 [id="edge55_Node000034_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="tbb::internal::generic\l_scheduler::prepare_task_pool",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a0460616fb84af745b12688927ff1bb7d",tooltip="Makes sure that the task pool can accommodate at least n more elements"];
  Node41 -> Node18 [id="edge56_Node000041_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node2 [id="edge57_Node000041_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node21 [id="edge58_Node000041_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node19 [id="edge59_Node000041_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node7 [id="edge60_Node000041_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node23 [id="edge61_Node000034_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node75 [id="edge62_Node000034_Node000075",color="steelblue1",style="solid",tooltip=" "];
  Node75 [id="Node000075",label="tbb::internal::fast\l_reverse_vector::push_back",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1fast__reverse__vector.html#ae533cd1ab5be44deaa0ee7ad7ece6f4b",tooltip=" "];
  Node75 -> Node10 [id="edge63_Node000075_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node34 -> Node76 [id="edge64_Node000034_Node000076",color="steelblue1",style="solid",tooltip=" "];
  Node76 [id="Node000076",label="tbb::internal::fast\l_reverse_vector::size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1fast__reverse__vector.html#af4bf3e062e3f758eb10dffd1af199f93",tooltip=" "];
  Node31 -> Node77 [id="edge65_Node000031_Node000077",color="steelblue1",style="solid",tooltip=" "];
  Node77 [id="Node000077",label="tbb::internal::reset\l_extra_state",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a7a454ca6d8bb2b9fccde7e52a0c31856",tooltip=" "];
  Node31 -> Node78 [id="edge66_Node000031_Node000078",color="steelblue1",style="solid",tooltip=" "];
  Node78 [id="Node000078",label="tbb::internal::context\l_guard_helper::set_ctx",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structtbb_1_1internal_1_1context__guard__helper.html#a350702cb725a4ecf04b30f9ab396e6b3",tooltip=" "];
  Node31 -> Node79 [id="edge67_Node000031_Node000079",color="steelblue1",style="solid",tooltip=" "];
  Node79 [id="Node000079",label="tbb::internal::custom\l_scheduler::tally_completion\l_of_predecessor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1custom__scheduler.html#ad4ec695868b3ae27a95f3e393601243a",tooltip="Decrements ref_count of a predecessor."];
  Node79 -> Node34 [id="edge68_Node000079_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node80 [id="edge69_Node000001_Node000080",color="steelblue1",style="solid",tooltip=" "];
  Node80 [id="Node000080",label="tbb::internal::custom\l_scheduler::receive_or\l_steal_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1custom__scheduler.html#a3825613e3650d5a9110b9b9f5ee4a3e9",tooltip="Try getting a task from the mailbox or stealing from another scheduler."];
  Node80 -> Node81 [id="edge70_Node000080_Node000081",color="steelblue1",style="solid",tooltip=" "];
  Node81 [id="Node000081",label="tbb::internal::generic\l_scheduler::can_steal",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a1c00f465a90ee09a240d1f81de5f635b",tooltip="Returns true if stealing is allowed"];
  Node81 -> Node82 [id="edge71_Node000081_Node000082",color="steelblue1",style="solid",tooltip=" "];
  Node82 [id="Node000082",label="__TBB_get_bsp",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$linux__ia64_8h.html#ad5657a41dbedfab5a94916d82d3f6778",tooltip="Retrieves the current RSE backing store pointer. IA64 specific."];
  Node80 -> Node83 [id="edge72_Node000080_Node000083",color="steelblue1",style="solid",tooltip=" "];
  Node83 [id="Node000083",label="tbb::internal::generic\l_scheduler::get_mailbox_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a5657ac6c517d9bbf59a424ef330640bb",tooltip="Attempt to get a task from the mailbox."];
  Node83 -> Node32 [id="edge73_Node000083_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node33 [id="edge74_Node000080_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node28 [id="edge75_Node000080_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node29 [id="edge76_Node000080_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node84 [id="edge77_Node000080_Node000084",color="steelblue1",style="solid",tooltip=" "];
  Node84 [id="Node000084",label="tbb::internal::prolonged\l_pause",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a0c5ac9e978873b08137acc8b6d584567",tooltip=" "];
  Node80 -> Node85 [id="edge78_Node000080_Node000085",color="steelblue1",style="solid",tooltip=" "];
  Node85 [id="Node000085",label="tbb::internal::generic\l_scheduler::steal_task",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#abb8f3f3967170ca9398e55b90220c3cb",tooltip="Attempts to steal a task from a randomly chosen thread/scheduler"];
  Node85 -> Node86 [id="edge79_Node000085_Node000086",color="steelblue1",style="solid",tooltip=" "];
  Node86 [id="Node000086",label="tbb::internal::task\l_proxy::extract_task",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$structtbb_1_1internal_1_1task__proxy.html#a40da3f9c1cf3a45264946dac05f7b9b6",tooltip="Returns a pointer to the encapsulated task or NULL, and frees proxy if necessary."];
  Node86 -> Node5 [id="edge80_Node000086_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node85 -> Node32 [id="edge81_Node000085_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node85 -> Node33 [id="edge82_Node000085_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node85 -> Node39 [id="edge83_Node000085_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node85 -> Node89 [id="edge84_Node000085_Node000089",color="steelblue1",style="solid",tooltip=" "];
  Node89 [id="Node000089",label="tbb::internal::generic\l_scheduler::steal_task_from",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#a15b506cb1b1da8e37255fc2fcdf250f0",tooltip="Steal task from another scheduler's ready pool."];
  Node89 -> Node33 [id="edge85_Node000089_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node80 -> Node93 [id="edge86_Node000080_Node000093",color="steelblue1",style="solid",tooltip=" "];
  Node93 [id="Node000093",label="tbb::internal::generic\l_scheduler::worker_outermost_level",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1generic__scheduler.html#aec76a489fe5368ede0d1658cbb74984b",tooltip="True if the scheduler is on the outermost dispatch level in a worker thread."];
  Node93 -> Node28 [id="edge87_Node000093_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node93 -> Node30 [id="edge88_Node000093_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node93 [id="edge89_Node000001_Node000093",color="steelblue1",style="solid",tooltip=" "];
}
