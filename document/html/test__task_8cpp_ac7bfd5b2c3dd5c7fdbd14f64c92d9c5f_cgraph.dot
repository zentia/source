digraph "TestMain"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TestMain",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Entry point to a TBB unit test application"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TestAffinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#ad3b5f6585aa4bb385f75c25dc5acd197",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tbb::task_scheduler\l_init::default_num_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1task__scheduler__init.html#a7177e341a66163cbed948013dbe86c56",tooltip="Returns the number of threads TBB scheduler would create if initialized by default."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tbb::internal::governor\l::default_num_threads",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a87ef607c22c347eb97ddafa4384b4f1d",tooltip=" "];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tbb::internal::Available\lHwConcurrency",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetbb_1_1internal.html#a5f583dafcd8d7ffeb10905c4eb509cd9",tooltip="Returns maximal parallelism level supported by the current OS configuration."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="GetTaskPtr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$harness__task_8h.html#ac6e8d864442457eb873ca20f45458251",tooltip="Helper for verifying that old use cases of spawn syntax still work."];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$boing_8c.html#a2858154e2009b0e6e616f313177762bc",tooltip=" "];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TestAlignment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a66d35c5c573acb87185c8f7ac31225fd",tooltip=" "];
  Node8 -> Node9 [id="edge8_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="TestAlignmentOfOneClass",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a4198792461388502e66d8f368d722f3e",tooltip=" "];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TestDag",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a027a34d717c2762f5e5b0848eb77d0dc",tooltip=" "];
  Node10 -> Node7 [id="edge10_Node000010_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="TestDispatchLoopResponsiveness",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a3abbf309872d38d8a31146ffadb007cc",tooltip=" "];
  Node11 -> Node7 [id="edge12_Node000011_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge13_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TestLeftRecursion",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a19cb43926e8c871b8f8c0356fb02a5a8",tooltip=" "];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Fib",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a11f2b6da909327e55ec0ab5566ad4c51",tooltip=" "];
  Node13 -> Node13 [id="edge15_Node000013_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node7 [id="edge16_Node000012_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node14 [id="edge17_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="TestMastersIsolation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a8d327c3485463ac7184b406959db88ee",tooltip=" "];
  Node14 -> Node3 [id="edge18_Node000014_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node7 [id="edge19_Node000014_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node14 -> Node15 [id="edge20_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="NativeParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$harness_8h.html#ad5b2c9cf4e169014b7919debb3c91d45",tooltip="Execute body(i) in parallel for i in the interval [0,n)."];
  Node1 -> Node16 [id="edge21_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TestNoteAffinityContext",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#aaf65e26f3e5c578990410693b2f27c34",tooltip=" "];
  Node16 -> Node7 [id="edge22_Node000016_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge23_Node000001_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="TestRelaxedOwnership",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a6196a66bda0bc814afb9df7b9e292d86",tooltip=" "];
  Node17 -> Node6 [id="edge24_Node000017_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node7 [id="edge25_Node000017_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node18 [id="edge26_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="RelaxedOwnershipTask\l::SetBarrier",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_relaxed_ownership_task.html#aa7672ce03b2622a03989a0d9af299399",tooltip=" "];
  Node1 -> Node19 [id="edge27_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="TestSafeContinuation",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a5edebd1226ff2c3036b915c8b7811903",tooltip=" "];
  Node19 -> Node7 [id="edge28_Node000019_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge29_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="TestSpawnChildren",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a9a9681cbc04458e93b31c60a337b2033",tooltip="Test task::spawn( task_list& )"];
  Node20 -> Node21 [id="edge30_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Expected",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a8e120e603e9c94c0d4aae1ddd7a1a5ed",tooltip="Compute what Count should be after RecursiveTask(child_count,depth) runs."];
  Node21 -> Node21 [id="edge31_Node000021_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node7 [id="edge32_Node000020_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge33_Node000001_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="TestSpawnRootList",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#afa6924df64a1117be1dd2c9e55ab13f2",tooltip="Test task::spawn_root_and_wait( task_list& )"];
  Node22 -> Node21 [id="edge34_Node000022_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node7 [id="edge35_Node000022_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node23 [id="edge36_Node000001_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="TestStealLimit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a55db9f87c545d2754c2fae3c68f28c13",tooltip=" "];
  Node23 -> Node7 [id="edge37_Node000023_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node24 [id="edge38_Node000001_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="TestUserThread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a8650306bd42ddc5857db656430bcae0f",tooltip=" "];
  Node24 -> Node7 [id="edge39_Node000024_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node25 [id="edge40_Node000024_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="RunSchedulerInstanceOnUser\lThread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a76baa0fd763a5f12c4a27d9f50f423d2",tooltip=" "];
  Node25 -> Node26 [id="edge41_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="e",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_cwise__array__power__array_8cpp.html#a9cb86ff854760bf91a154f2724a9101d",tooltip=" "];
  Node26 -> Node26 [id="edge42_Node000026_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge43_Node000001_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="TestWaitableTask",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a5af18b8ccd10621e6ac68dd0acd1c036",tooltip=" "];
  Node1 -> Node28 [id="edge44_Node000001_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="TestWaitDiscriminativeness\lWithoutStealing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a93ef615de36c833e174967071704a843",tooltip=" "];
  Node28 -> Node7 [id="edge45_Node000028_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node29 [id="edge46_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="TestWaitDiscriminativeness\lWithStealing",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__task_8cpp.html#a1ec3b96e7e149a947043c52592983fa0",tooltip=" "];
  Node29 -> Node7 [id="edge47_Node000029_Node000007",color="steelblue1",style="solid",tooltip=" "];
}
