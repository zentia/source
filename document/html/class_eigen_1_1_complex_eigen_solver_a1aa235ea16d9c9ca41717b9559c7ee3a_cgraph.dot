digraph "Eigen::ComplexEigenSolver::compute"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Eigen::ComplexEigenSolver\l::compute",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Eigen::ComplexEigenSolver\l::check_template_parameters",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_eigen_solver.html#ad20cfdbbbeb1013d37dc1d82e20405ec",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Eigen::ComplexEigenSolver\l::doComputeEigenvectors",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_eigen_solver.html#ae33adb02cbad66ad8b94f9cc0eba71ab",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Eigen::GenericNumTraits\l::epsilon",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_eigen_1_1_generic_num_traits.html#aadcf7fa75b2bc9a0e461a3b851d836a7",tooltip=" "];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Eigen::numext::maxi",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_eigen_1_1numext.html#a29d502349f2ec9897c808e65e0f96eb4",tooltip=" "];
  Node5 -> Node5 [id="edge5_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node6 [id="edge6_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Eigen::numext::real_ref",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_eigen_1_1numext.html#a908b0f48dbf32779221377494ebbb62e",tooltip=" "];
  Node6 -> Node6 [id="edge7_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Eigen::internal::real\l_ref_impl::run",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_eigen_1_1internal_1_1real__ref__impl.html#acb00bb242ddaee8a963fab35fe11b60d",tooltip=" "];
  Node3 -> Node8 [id="edge9_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="row",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_matrix_base__row_8cpp.html#a64ef8efef59f875033a27e7cbbc879ec",tooltip=" "];
  Node3 -> Node9 [id="edge10_Node000003_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="segment",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_block_methods_8h.html#a3c8d2bfe6f857a2a270b78759487e3a8",tooltip="This is the const version of segment(Index,Index)."];
  Node1 -> Node10 [id="edge11_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Eigen::ComplexEigenSolver\l::sortEigenvalues",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_eigen_solver.html#a977117acbb9361ce295e8ef5279acbae",tooltip=" "];
  Node10 -> Node11 [id="edge12_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="std::swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a3acbe51b6415e9284430194bf04944e1",tooltip=" "];
  Node11 -> Node12 [id="edge13_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="rfl::Box::ptr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classrfl_1_1_box.html#a2edf048a6e6bea174db329e6ce7cf3df",tooltip="Returns the underlying unique_ptr"];
  Node11 -> Node11 [id="edge14_Node000011_Node000011",color="steelblue1",style="solid",tooltip=" "];
}
