digraph "schur"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="schur",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="cast",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_common_cwise_unary_ops_8h.html#aa89d007196125d10fa7d6e19811aca05",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="col",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_matrix_base__col_8cpp.html#aa168d9544aa6d49fce0cbfc0bec849b0",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Eigen::ComplexSchur\l::compute",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#aedd7040c7b8b79aac600a70f50972602",tooltip="Computes Schur decomposition of given matrix."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Eigen::ComplexSchur\l::ComplexSchur",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#ad707d9978dc36b3b15e460c2a83f4093",tooltip="Default constructor."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Eigen::ComplexSchur\l::getMaxIterations",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#a2fc0b7bc409a49e7cdb7b6edcfff26eb",tooltip="Returns the maximum number of iterations."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Eigen::ComplexSchur\l::info",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#a8c5ee15fecfd126fc362c3f2fd28f51e",tooltip="Reports whether previous computation was successful."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Eigen::ComplexSchur\l::matrixT",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#a210b9d7e6c26fdde18aa5720da1d3e3c",tooltip="Returns the triangular matrix in the Schur decomposition."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Eigen::ComplexSchur\l::matrixU",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#a695d312ce07fc0a82ce5d5ce8cd680da",tooltip="Returns the unitary matrix in the Schur decomposition."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="row",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_matrix_base__row_8cpp.html#a64ef8efef59f875033a27e7cbbc879ec",tooltip=" "];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="schurOfA",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_complex_schur__matrix_t_8cpp.html#aa5c3ac41d1260b7821f3cc92c5869a9d",tooltip=" "];
  Node11 -> Node11 [id="edge11_Node000011_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge12_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Eigen::ComplexSchur\l::setMaxIterations",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_eigen_1_1_complex_schur.html#acf2a88a88657b2aa909e8b25fc2df645",tooltip="Sets the maximum number of iterations allowed."];
  Node12 -> Node5 [id="edge13_Node000012_Node000005",color="steelblue1",style="solid",tooltip=" "];
}
