digraph "utility::tuple::append"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="utility::tuple::append",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="the deduction function for append_base that automatically generate the IndexRange"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="utility::tuple::append_base",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceutility_1_1tuple.html#a3ea3f51ccd84a9e293b32d2662605569",tooltip="unpacking the elements of the input tuple t and creating a new tuple by adding element a at the end o..."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$stdlist__overload_8cpp.html#a120a90058439faee14791b33f94c0693",tooltip=" "];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="utility::tuple::make\l_tuple",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceutility_1_1tuple.html#a88ee8d0837a69d3d7ad44546aa2949cb",tooltip="Creates a tuple object, deducing the target type from the types of arguments."];
}
