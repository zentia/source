digraph "tbb::interface5::concurrent_priority_queue::swap"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tbb::interface5::concurrent\l_priority_queue::swap",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Swap this queue with another; not thread-safe"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tbb::interface5::concurrent\l_priority_queue::concurrent\l_priority_queue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1interface5_1_1concurrent__priority__queue.html#a405be01bac4048f214797c287e2571a1",tooltip="Constructs a new concurrent_priority_queue with default capacity"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="std::swap",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a3acbe51b6415e9284430194bf04944e1",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="rfl::Box::ptr",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classrfl_1_1_box.html#a2edf048a6e6bea174db329e6ce7cf3df",tooltip="Returns the underlying unique_ptr"];
  Node3 -> Node3 [id="edge4_Node000003_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node1 [id="edge5_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
}
