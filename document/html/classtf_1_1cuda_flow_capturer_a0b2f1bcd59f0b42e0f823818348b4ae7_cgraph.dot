digraph "tf::cudaFlowCapturer::for_each"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tf::cudaFlowCapturer\l::for_each",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="captures a kernel that applies a callable to each dereferenced element of the data array"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tf::cuda_for_each",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a7c449cec0b93503b8280d05add35e9f4",tooltip="performs asynchronous parallel iterations over a range of items"];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tf::detail::cuda_for\l_each_kernel",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf_1_1detail.html#a25cd7b4ecddff9e32d577eba0f8455bb",tooltip=" "];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tf::cuda_get_tile",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a5a41760b383016bd1cebadcfd7f05476",tooltip=" "];
  Node4 -> Node4 [id="edge4_Node000004_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node5 [id="edge5_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tf::cuda_strided_iterate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a24db9e13fd26535886a7efc723ec1477",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tf::cuda_iterate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacetf.html#a55e1e8a489984141bc8e0785cd13f9bc",tooltip=" "];
  Node6 -> Node6 [id="edge7_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 -> Node7 [id="edge8_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tf::cudaIterate::eval",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structtf_1_1cuda_iterate.html#a46b1c72193af5cdfc8697a57754af6f9",tooltip=" "];
  Node7 -> Node7 [id="edge9_Node000007_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node8 [id="edge10_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="f",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$cxx11__tensor__map_8cpp.html#a7f507fea02198f6cb81c86640c7b1a4e",tooltip=" "];
  Node6 -> Node8 [id="edge11_Node000006_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node5 [id="edge12_Node000005_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node8 [id="edge13_Node000005_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node9 [id="edge14_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tf::cudaFlowCapturer::on",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_flow_capturer.html#ad0d937ae0d77239f148b66a77e35db41",tooltip="captures a sequential CUDA operations from the given callable"];
}
