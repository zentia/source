digraph "类继承关系图"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="std::unique_ptr",height=0.2,width=0.4,color="grey60", fillcolor="#E0E0E0", style="filled",tooltip=" "];
  Node0 -> Node1 [id="edge6622_Node000000_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="tf::cudaEventBase\<\l cudaEventCreator, cudaEvent\lDeleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_event_base.html",tooltip=" "];
  Node0 -> Node2 [id="edge6623_Node000000_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tf::cudaGraphBase\<\l cudaGraphCreator, cudaGraph\lDeleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_graph_base.html",tooltip=" "];
  Node2 -> Node3 [id="edge6624_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tf::cudaFlow",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_flow.html",tooltip="class to create a cudaFlow task dependency graph"];
  Node0 -> Node4 [id="edge6625_Node000000_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tf::cudaGraphExecBase\l\< cudaGraphExecCreator,\l cudaGraphExecDeleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_graph_exec_base.html",tooltip=" "];
  Node0 -> Node5 [id="edge6626_Node000000_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tf::cudaStreamBase\l\< cudaStreamCreator,\l cudaStreamDeleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_stream_base.html",tooltip=" "];
  Node0 -> Node6 [id="edge6627_Node000000_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tf::cudaEventBase\<\l Creator, Deleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_event_base.html",tooltip="class to create a smart pointer wrapper for managing cudaEvent_t"];
  Node0 -> Node7 [id="edge6628_Node000000_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tf::cudaGraphBase\<\l Creator, Deleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_graph_base.html",tooltip=" "];
  Node0 -> Node8 [id="edge6629_Node000000_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tf::cudaGraphExecBase\l\< Creator, Deleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_graph_exec_base.html",tooltip="class to create an executable CUDA graph managed by C++ smart pointer"];
  Node0 -> Node9 [id="edge6630_Node000000_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tf::cudaStreamBase\l\< Creator, Deleter \>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_stream_base.html",tooltip="class to create a smart pointer wrapper for managing cudaStream_t"];
}
