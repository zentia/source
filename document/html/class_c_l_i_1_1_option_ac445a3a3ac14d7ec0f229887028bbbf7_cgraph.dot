digraph "CLI::Option::results"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CLI::Option::results",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Get the results as a specified type"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CLI::Option::_add_result",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a2a5f4081506d6e1c937a8fc7346edfa4",tooltip="Add a single result to the result set, taking into account delimiters"];
  Node2 -> Node2 [id="edge2_Node000002_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node3 [id="edge3_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CLI::Option::get_expected_max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#abc2f07af59e6a602ea6295486360f349",tooltip="The max number of times the option expects to be included"];
  Node2 -> Node4 [id="edge4_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="CLI::detail::split",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a51c7de56768f2801b0cf95f247b01f06",tooltip="Split a string by a delim"];
  Node2 -> Node5 [id="edge5_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="CLI::detail::split_up",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a90b70b1a501978d788801723a01f3de9",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="std::begin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#aec76fc52a775d29bc4058c8e1405045a",tooltip=" "];
  Node5 -> Node7 [id="edge7_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CLI::detail::close\l_sequence",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a70c26f1817baa9914b68840cbf6e4f7e",tooltip=" "];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CLI::detail::close\l_literal_quote",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#aa8b879211f0208285f2f1bb2edb53d4e",tooltip=" "];
  Node7 -> Node9 [id="edge9_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="CLI::detail::close\l_string_quote",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a10c59c513b0fdc30111889775e999e46",tooltip=" "];
  Node7 -> Node10 [id="edge10_Node000007_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="CLI::detail::matchBracket\lChars",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ab5be862cbae2a3c64f05618bf9250da9",tooltip=" "];
  Node5 -> Node11 [id="edge11_Node000005_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="std::end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a35f71a4c49ddf38bb590177e3a4b2598",tooltip=" "];
  Node5 -> Node10 [id="edge12_Node000005_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node12 [id="edge13_Node000005_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="CLI::detail::trim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a621323632158048f6168deacc432b838",tooltip="Trim whitespace from string"];
  Node12 -> Node13 [id="edge14_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="CLI::detail::ltrim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a603eeabf0b2663fa405871b8318c1507",tooltip="Trim whitespace from left of string"];
  Node12 -> Node14 [id="edge15_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="CLI::detail::rtrim",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#aef3c5cc699d323f04f21cc1c124e772e",tooltip="Trim whitespace from right of string"];
  Node1 -> Node15 [id="edge16_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="CLI::Option::_reduce\l_results",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#aa94827437444cbd41f9d59a84c35ca40",tooltip=" "];
  Node15 -> Node16 [id="edge17_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="CLI::ArgumentMismatch\l::AtLeast",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_argument_mismatch.html#a76c9d5822d9b0a2825a54a22e04e05ff",tooltip=" "];
  Node16 -> Node17 [id="edge18_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="CLI::ArgumentMismatch\l::ArgumentMismatch",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_argument_mismatch.html#a03b5d359cb07e82b2d2f0f734ffeb545",tooltip=" "];
  Node17 -> Node17 [id="edge19_Node000017_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node18 [id="edge20_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="to_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$spdlog_2include_2spdlog_2fmt_2bundled_2format_8h.html#a5aca7e9d14d858d6f3fdc063d66840f8",tooltip=" "];
  Node18 -> Node19 [id="edge21_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="detail::assume",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacedetail.html#a208b54c1c61a9bce9df4531a657a0c64",tooltip=" "];
  Node15 -> Node20 [id="edge22_Node000015_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="CLI::ArgumentMismatch\l::AtMost",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_argument_mismatch.html#ae13fac165ff6b4fdc588d364dbaa85bf",tooltip=" "];
  Node20 -> Node17 [id="edge23_Node000020_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node21 [id="edge24_Node000015_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="CLI::Option::get_items\l_expected_max",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a7bdc3555509b93cbd8d5b9b2ccb3b016",tooltip="Get the maximum number of items expected to be returned and used for the callback"];
  Node21 -> Node22 [id="edge25_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="CLI::detail::checked\l_multiply",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a58ce723daebf6cd298565eb365d1b157",tooltip="Performs a *= b; if it doesn't cause integer overflow. Returns false otherwise."];
  Node22 -> Node22 [id="edge26_Node000022_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node23 [id="edge27_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="CLI::detail::overflowCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a569135c6e266940a5f914698b9deef66",tooltip="Do a check for overflow on signed numbers"];
  Node23 -> Node23 [id="edge28_Node000023_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node24 [id="edge29_Node000015_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="CLI::Option::get_items\l_expected_min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a65f68eaa288d2608560ae87f3c36f6fa",tooltip="The total min number of expected string values to be used"];
  Node15 -> Node25 [id="edge30_Node000015_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="CLI::Option::get_name",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a47e135d5198fd9df5b481091d2538b60",tooltip="Gets a comma separated list of names. Will include / prefer the positional name if positional is true..."];
  Node25 -> Node26 [id="edge31_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="CLI::Option::check\l_fname",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a331870cf4db8893cac3af126aac487a8",tooltip="Requires \"--\" to be removed from string"];
  Node26 -> Node27 [id="edge32_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="CLI::detail::find_member",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ac94be0722dce2c7ff522ebc3fb80e33d",tooltip="Check if a string is a member of a list of strings and optionally ignore case or ignore underscores"];
  Node27 -> Node6 [id="edge33_Node000027_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node11 [id="edge34_Node000027_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node28 [id="edge35_Node000027_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="CLI::ignore_case",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i.html#a0c52326d2681814c22aa1a93ce43375e",tooltip="Helper function to allow ignore_case to be passed to IsMember or Transform"];
  Node28 -> Node28 [id="edge36_Node000028_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 -> Node29 [id="edge37_Node000028_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="CLI::detail::to_lower",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ae83709ec148057ec53df4383645727e9",tooltip="Return a lower case version of a string"];
  Node29 -> Node6 [id="edge38_Node000029_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node29 -> Node11 [id="edge39_Node000029_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node30 [id="edge40_Node000027_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="CLI::ignore_underscore",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i.html#a111b6f05d21b9b84e7ba933ade79884c",tooltip="Helper function to allow ignore_underscore to be passed to IsMember or Transform"];
  Node30 -> Node30 [id="edge41_Node000030_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node31 [id="edge42_Node000030_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="CLI::detail::remove\l_underscore",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a5359a7a0e33366a12e15523b100f591a",tooltip="remove underscores from a string"];
  Node31 -> Node6 [id="edge43_Node000031_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node31 -> Node11 [id="edge44_Node000031_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node31 [id="edge45_Node000027_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node27 -> Node29 [id="edge46_Node000027_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node32 [id="edge47_Node000025_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="CLI::Option::empty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#ab9d324306095b7af93bc09812f5b4dec",tooltip="True if the option was not passed"];
  Node25 -> Node33 [id="edge48_Node000025_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="CLI::Option::get_flag\l_value",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#aa006173c1a09b0ed01bff4b305b042ca",tooltip=" "];
  Node33 -> Node27 [id="edge49_Node000033_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node34 [id="edge50_Node000033_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="CLI::ArgumentMismatch\l::FlagOverride",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_argument_mismatch.html#af40fccb119664c7c5025bba76fb2d7e2",tooltip=" "];
  Node34 -> Node17 [id="edge51_Node000034_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node33 -> Node35 [id="edge52_Node000033_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="second",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$second___n_o_n_e_8f.html#ae9f971a8b343bd2fcb85c3b16da97f10",tooltip="SECOND returns nothing"];
  Node35 -> Node36 [id="edge53_Node000035_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="e",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_cwise__array__power__array_8cpp.html#a9cb86ff854760bf91a154f2724a9101d",tooltip=" "];
  Node36 -> Node36 [id="edge54_Node000036_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node35 -> Node35 [id="edge55_Node000035_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node37 [id="edge56_Node000025_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="CLI::OptionBase\< Option\l \>::get_group",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option_base.html#aeb86193da05c10a12814ce45d2d16e0d",tooltip=" "];
  Node25 -> Node38 [id="edge57_Node000025_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="CLI::Option::get_items\l_expected",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#aa12c4f65cf2ac9c58ebe050c46603fc0",tooltip="The total min number of expected string values to be used"];
  Node38 -> Node24 [id="edge58_Node000038_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node39 [id="edge59_Node000025_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="CLI::detail::join",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ab351f13ec104e2cba19ec6baf4a552f6",tooltip="Simple function to join a string"];
  Node39 -> Node6 [id="edge60_Node000039_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node11 [id="edge61_Node000039_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node39 [id="edge62_Node000015_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node40 [id="edge63_Node000015_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="std::min",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#ac7b9885417769949d76890454b6d072e",tooltip=" "];
  Node1 -> Node41 [id="edge64_Node000001_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="CLI::Option::_validate\l_results",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a7f80e1e545c91f8babef62cf52221d0d",tooltip="Run the results through the Validators"];
  Node41 -> Node42 [id="edge65_Node000041_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="CLI::Option::_validate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#afd4ba41c3478ceb636fdfc4dfdfcb2b3",tooltip=" "];
  Node41 -> Node21 [id="edge66_Node000041_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node25 [id="edge67_Node000041_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node41 -> Node43 [id="edge68_Node000041_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="CLI::detail::is_separator",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a53b46b96102830769cc02952392e782f",tooltip="check if a string is a container segment separator (empty or \"%%\")"];
  Node1 -> Node25 [id="edge69_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node44 [id="edge70_Node000001_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="CLI::Option::reduced\l_results",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_c_l_i_1_1_option.html#a2db0b397f74420d034944ce55d07509a",tooltip="Get a copy of the results"];
  Node44 -> Node15 [id="edge71_Node000044_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node44 -> Node41 [id="edge72_Node000044_Node000041",color="steelblue1",style="solid",tooltip=" "];
}
