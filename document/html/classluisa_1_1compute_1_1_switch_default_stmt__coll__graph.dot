digraph "luisa::compute::SwitchDefaultStmt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="luisa::compute::SwitchDefaultStmt",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default statement of switch"];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="luisa::compute::Statement",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classluisa_1_1compute_1_1_statement.html",tooltip="Base statement class"];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="luisa::concepts::Noncopyable",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structluisa_1_1concepts_1_1_noncopyable.html",tooltip=" "];
  Node4 -> Node1 [id="edge3_Node000001_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _body",fontcolor="grey" ];
  Node4 [id="Node000004",label="luisa::compute::ScopeStmt",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classluisa_1_1compute_1_1_scope_stmt.html",tooltip="Scope statement"];
  Node2 -> Node4 [id="edge4_Node000004_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node4 [id="edge5_Node000004_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _statements",fontcolor="grey" ];
  Node5 [id="Node000005",label="eastl::vector\< const\l luisa::compute::Statement * \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classeastl_1_1vector.html",tooltip=" "];
  Node6 -> Node5 [id="edge6_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="eastl::VectorBase\<\l const luisa::compute\l::Statement *, EASTLAllocator\lType \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structeastl_1_1_vector_base.html",tooltip=" "];
  Node2 -> Node6 [id="edge7_Node000006_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" mpBegin\nmpEnd",fontcolor="grey" ];
  Node7 -> Node6 [id="edge8_Node000006_Node000007",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" mCapacityAllocator",fontcolor="grey" ];
  Node7 [id="Node000007",label="eastl::compressed_pair\l\< const luisa::compute\l::Statement **, allocator_type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classeastl_1_1compressed__pair.html",tooltip=" "];
  Node8 -> Node7 [id="edge9_Node000007_Node000008",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="eastl::compressed_pair\l_imp\< const luisa::compute\l::Statement **, allocator\l_type, compressed_pair_switch\l\< const luisa::compute::Statement\l **, allocator_type, is_same\< remove\l_cv\< const luisa::compute::Statement\l ** \>::type, remove_cv\< allocator_type\l \>::type \>::value, is_empty\< const luisa\l::compute::Statement ** \>::value, is_empty\l\< allocator_type \>::value \>::value \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classeastl_1_1compressed__pair__imp.html",tooltip=" "];
}
