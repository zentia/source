digraph "tf::Node"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tf::Node",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _topology",fontcolor="grey" ];
  Node2 [id="Node000002",label="tf::Topology",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_topology.html",tooltip=" "];
  Node3 -> Node2 [id="edge2_Node000002_Node000003",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _taskflow",fontcolor="grey" ];
  Node3 [id="Node000003",label="tf::Taskflow",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_taskflow.html",tooltip="class to create a taskflow object"];
  Node4 -> Node3 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tf::FlowBuilder",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_flow_builder.html",tooltip="class to build a task dependency graph"];
  Node5 -> Node4 [id="edge4_Node000004_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _graph",fontcolor="grey" ];
  Node5 [id="Node000005",label="tf::Graph",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_graph.html",tooltip="class to create a graph object"];
  Node6 -> Node5 [id="edge5_Node000005_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="std::vector\< std::unique\l_ptr\< Node \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node3 [id="edge6_Node000003_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _graph",fontcolor="grey" ];
  Node1 -> Node1 [id="edge7_Node000001_Node000001",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _parent",fontcolor="grey" ];
  Node7 -> Node1 [id="edge8_Node000001_Node000007",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" _edges",fontcolor="grey" ];
  Node7 [id="Node000007",label="tf::SmallVector\< tf\l::Node *, 4 \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector.html",tooltip=" "];
  Node8 -> Node7 [id="edge9_Node000007_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tf::SmallVectorImpl\l\< tf::Node * \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_impl.html",tooltip=" "];
  Node9 -> Node8 [id="edge10_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tf::SmallVectorTemplateBase\l\< tf::Node *, IsPod\< tf\l::Node * \>::value \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_template_base.html",tooltip=" "];
  Node10 -> Node9 [id="edge11_Node000009_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="tf::SmallVectorTemplateCommon\l\< tf::Node * \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_template_common.html",tooltip=" "];
  Node11 -> Node10 [id="edge12_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="tf::SmallVectorBase",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_base.html",tooltip=" "];
  Node12 -> Node10 [id="edge13_Node000010_Node000012",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" FirstEl",fontcolor="grey" ];
  Node12 [id="Node000012",label="tf::SmallVectorTemplateCommon\l\< T, typename \>::AlignedUnionType\l\< tf::Node * \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structtf_1_1_small_vector_template_common_1_1_aligned_union_type.html",tooltip=" "];
  Node13 -> Node7 [id="edge14_Node000007_Node000013",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" Storage",fontcolor="grey" ];
  Node13 [id="Node000013",label="tf::SmallVectorStorage\l\< Eigen::Triplet\< double\l \>, N \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structtf_1_1_small_vector_storage.html",tooltip=" "];
  Node14 -> Node13 [id="edge15_Node000013_Node000014",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" InlineElts",fontcolor="grey" ];
  Node14 [id="Node000014",label="tf::SmallVectorTemplateCommon\l\< Eigen::Triplet\< double \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1_small_vector_template_common.html",tooltip=" "];
  Node11 -> Node14 [id="edge16_Node000014_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node14 [id="edge17_Node000014_Node000015",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" FirstEl",fontcolor="grey" ];
  Node15 [id="Node000015",label="tf::SmallVectorTemplateCommon\l\< T, typename \>::AlignedUnionType\l\< Eigen::Triplet\< double \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structtf_1_1_small_vector_template_common_1_1_aligned_union_type.html",tooltip=" "];
}
