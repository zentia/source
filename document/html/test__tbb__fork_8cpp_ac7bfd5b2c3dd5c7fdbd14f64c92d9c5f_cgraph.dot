digraph "TestMain"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="TestMain",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Entry point to a TBB unit test application"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CallParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#a18c1d131d3b35a857f46a9dc83e54b7b",tooltip=" "];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tbb::parallel_for",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$group__algorithms.html#gaa8444c29dc4d2e527a1036717d109aef",tooltip="Parallel iteration over range with default partitioner."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="SigHandler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#a29336d89ac8176393eed5b43c70aa80d",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TestAutoInit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#a00d09cb3c5c4a5d629b3670c08379203",tooltip=" "];
  Node5 -> Node2 [id="edge5_Node000005_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node5 -> Node6 [id="edge6_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="NativeParallelFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$harness_8h.html#ad5b2c9cf4e169014b7919debb3c91d45",tooltip="Execute body(i) in parallel for i in the interval [0,n)."];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="TestBlockNonblock",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#a93657e8d092b2284552e7993e9796311",tooltip=" "];
  Node7 -> Node6 [id="edge8_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TestNestingTSI",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#a14bd1cf09db2684d93d77b0d4b4de745",tooltip=" "];
  Node8 -> Node2 [id="edge10_Node000008_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node6 [id="edge11_Node000008_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge12_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="tbb::task_scheduler\l_init::terminate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1task__scheduler__init.html#afcd615b84c2f57d7ada13813a8443ecf",tooltip="Inverse of method initialize."];
  Node9 -> Node10 [id="edge13_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="tbb::task_scheduler\l_init::internal_terminate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1task__scheduler__init.html#a2647279bff44f88c82eead707d4c7a14",tooltip=" "];
  Node10 -> Node11 [id="edge14_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="tbb::internal::governor\l::terminate_scheduler",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a0962408ba1eaf67d0ad741a0749f3a4e",tooltip="Processes scheduler termination request (possibly nested) in a master thread"];
  Node11 -> Node12 [id="edge15_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="tbb::internal::governor\l::is_set",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a14d4453f34a770b1c983c2ed38570e31",tooltip="Used to check validity of the local scheduler TLS contents."];
  Node12 -> Node13 [id="edge16_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="tbb::internal::governor\l::tls_value_of",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classtbb_1_1internal_1_1governor.html#a342eb43ff89d1b0da4cb9aa5417b3965",tooltip="Computes the value of the TLS"];
  Node1 -> Node14 [id="edge17_Node000001_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="TestSchedulerMemLeaks",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#a1b6ccde1e9afa2b6d46c8b1c93998528",tooltip=" "];
  Node14 -> Node15 [id="edge18_Node000014_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="GetMemoryUsage",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$harness__memory_8h.html#a2d1a7740cfec76c47e123438123dcd0c",tooltip="Return estimate of number of bytes of memory that this program is currently using."];
  Node1 -> Node16 [id="edge19_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TestTasksInThread",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$test__tbb__fork_8cpp.html#ac58646a720b2f1745b989e26e3320992",tooltip=" "];
  Node16 -> Node2 [id="edge20_Node000016_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node16 -> Node6 [id="edge21_Node000016_Node000006",color="steelblue1",style="solid",tooltip=" "];
}
