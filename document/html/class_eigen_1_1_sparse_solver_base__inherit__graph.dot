digraph "Eigen::SparseSolverBase&lt; Derived &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="Eigen::SparseSolverBase\l\< Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="A base class for sparse solvers"];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="Eigen::internal::noncopyable",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1internal_1_1noncopyable.html",tooltip=" "];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSimplicialLLT \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html",tooltip=" "];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSimplicialLDLT \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html",tooltip=" "];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodSupernodalLLT \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html",tooltip=" "];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l CholmodDecomposition \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html",tooltip=" "];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="Eigen::IterativeSolverBase\l\< BiCGSTAB \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip=" "];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="Eigen::IterativeSolverBase\l\< ConjugateGradient \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip=" "];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="Eigen::IterativeSolverBase\l\< LeastSquaresConjugateGradient \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip=" "];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="Eigen::IterativeSolverBase\l\< DGMRES \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip=" "];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="Eigen::IterativeSolverBase\l\< GMRES \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip=" "];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="Eigen::IterativeSolverBase\l\< MINRES \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip=" "];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="Eigen::PardisoImpl\l\< PardisoLU \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pardiso_impl.html",tooltip=" "];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="Eigen::PardisoImpl\l\< PardisoLLT\< MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pardiso_impl.html",tooltip=" "];
  Node14 -> Node15 [id="edge14_Node000014_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="Eigen::PardisoLLT\<\l MatrixType, _UpLo \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pardiso_l_l_t.html",tooltip="A sparse direct Cholesky (LLT) factorization and solver based on the PARDISO library"];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="Eigen::PardisoImpl\l\< PardisoLDLT\< MatrixType,\l Options \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pardiso_impl.html",tooltip=" "];
  Node16 -> Node17 [id="edge16_Node000016_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="Eigen::PardisoLDLT\l\< MatrixType, Options \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pardiso_l_d_l_t.html",tooltip="A sparse direct Cholesky (LDLT) factorization and solver based on the PARDISO library"];
  Node1 -> Node18 [id="edge17_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="Eigen::PastixBase\<\l PastixLU\< MatrixType \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html",tooltip=" "];
  Node1 -> Node19 [id="edge18_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="Eigen::PastixBase\<\l PastixLLT\< MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html",tooltip=" "];
  Node1 -> Node20 [id="edge19_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="Eigen::PastixBase\<\l PastixLDLT\< MatrixType,\l _UpLo \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html",tooltip=" "];
  Node1 -> Node21 [id="edge20_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="Eigen::SimplicialCholesky\lBase\< SimplicialLLT \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html",tooltip=" "];
  Node1 -> Node22 [id="edge21_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="Eigen::SimplicialCholesky\lBase\< SimplicialLDLT \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html",tooltip=" "];
  Node1 -> Node23 [id="edge22_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="Eigen::SimplicialCholesky\lBase\< SimplicialCholesky \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html",tooltip=" "];
  Node1 -> Node24 [id="edge23_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="Eigen::SparseQR\< Jacobian\lType, COLAMDOrdering\< int \> \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_sparse_q_r.html",tooltip=" "];
  Node1 -> Node25 [id="edge24_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="Eigen::SuperLUBase\l\< _MatrixType, SuperLU \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_super_l_u_base.html",tooltip=" "];
  Node1 -> Node26 [id="edge25_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="Eigen::CholmodBase\l\< _MatrixType, _UpLo,\l Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_cholmod_base.html",tooltip="The base class for the direct Cholesky factorization of Cholmod"];
  Node1 -> Node27 [id="edge26_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="Eigen::IncompleteCholesky\l\< Scalar, _UpLo, _OrderingType \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_incomplete_cholesky.html",tooltip="Modified Incomplete Cholesky with dual threshold"];
  Node1 -> Node28 [id="edge27_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="Eigen::IterativeSolverBase\l\< Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_iterative_solver_base.html",tooltip="Base class for linear iterative solvers"];
  Node1 -> Node29 [id="edge28_Node000001_Node000029",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="Eigen::PardisoImpl\l\< Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pardiso_impl.html",tooltip=" "];
  Node1 -> Node30 [id="edge29_Node000001_Node000030",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="Eigen::PastixBase\<\l Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_pastix_base.html",tooltip=" "];
  Node1 -> Node31 [id="edge30_Node000001_Node000031",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="Eigen::SimplicialCholesky\lBase\< Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_simplicial_cholesky_base.html",tooltip="A base class for direct sparse Cholesky factorizations"];
  Node1 -> Node32 [id="edge31_Node000001_Node000032",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="Eigen::SuperLUBase\l\< _MatrixType, Derived \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$class_eigen_1_1_super_l_u_base.html",tooltip="The base class for the direct and incomplete LU factorization of SuperLU"];
}
