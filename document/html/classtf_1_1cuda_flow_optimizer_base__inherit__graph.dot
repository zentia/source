digraph "tf::cudaFlowOptimizerBase"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="tf::cudaFlowOptimizerBase",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="class to provide helper common methods for optimization algorithms"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tf::cudaFlowLinearOptimizer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_flow_linear_optimizer.html",tooltip="class to capture a linear CUDA graph using a sequential stream"];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tf::cudaFlowRoundRobinOptimizer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_flow_round_robin_optimizer.html",tooltip="class to capture a CUDA graph using a round-robin algorithm"];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="tf::cudaFlowSequentialOptimizer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classtf_1_1cuda_flow_sequential_optimizer.html",tooltip="class to capture a CUDA graph using a sequential stream"];
}
