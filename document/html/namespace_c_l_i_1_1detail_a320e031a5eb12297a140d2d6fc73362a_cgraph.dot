digraph "CLI::detail::generate_map"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="CLI::detail::generate_map",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Generate a string representation of a map"];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="CLI::detail::pair_adaptor\l::first",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_c_l_i_1_1detail_1_1pair__adaptor.html#ab46a8b1544ac182fe15948fe94a75bd6",tooltip="Get the first value (really just the underlying value)"];
  Node1 -> Node1 [id="edge2_Node000001_Node000001",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge3_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="CLI::detail::join",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#ab351f13ec104e2cba19ec6baf4a552f6",tooltip="Simple function to join a string"];
  Node3 -> Node4 [id="edge4_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="std::begin",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#aec76fc52a775d29bc4058c8e1405045a",tooltip=" "];
  Node3 -> Node5 [id="edge5_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="std::end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacestd.html#a35f71a4c49ddf38bb590177e3a4b2598",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="CLI::detail::pair_adaptor\l::second",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_c_l_i_1_1detail_1_1pair__adaptor.html#a69f2f87359de8d01c72ac645c6ada8c8",tooltip="Get the second value (really just the underlying value)"];
  Node1 -> Node7 [id="edge7_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="CLI::detail::smart\l_deref",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a0c6cf48feae9d909d52e7b4c346cba29",tooltip=" "];
  Node7 -> Node7 [id="edge8_Node000007_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge9_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="CLI::detail::to_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespace_c_l_i_1_1detail.html#a0e94052d485636fc9f18c21009026577",tooltip="Convert an object to a string (directly forward if this can become a string)"];
}
